@page "/nickcost"
@using Newtonsoft.Json
@using ExpenseItem = Index.ExpenseItem
@using ExpenseItemVariable = Index.ExpenseItemVariable
@inject HttpClient Http

<PageTitle>Nick's Costs</PageTitle>
<br /><br />
<ProgressBar Title="Income Used This Month" Height="40px" Width="400" InitialValue="@GrossRemaining" DisplayStringFraction="@DisplayGrossFraction" DisplayStringPercent="@GrossRemaining"></ProgressBar>
<br /><br />
<h4 style="text-align: center">Breakdown</h4>
<ul style="border: groove black 2px;">
    @for(var i = 0; i < StaticExpenses.Count; i++)
    {
        if(i == 0)
        {
            <li>@StaticExpenses[i].Description &#8611 $@StaticExpenses[i].Amount</li>
        }
        else
        {
            <li style="border-top:dashed black 1px">@StaticExpenses[i].Description &#8611 $@StaticExpenses[i].Amount</li>
        }    
    }
</ul>

@code {
    public static double UtilityCost = 150.00;
    public static double RentCost = 833.50;
    public static double CarPaymentCost = 460.73;
    public static double MuayThaiCost = 250.00;
    public static double GroceryCost = 400.00;
    public static double InsuranceCost = 180.83;
    public static double YoutubeCost = 30.00;
    public static double CrunchyrollCost = 9.99;
    public static double ParkingSpotCost = 65.00;
    public decimal InvestmentCost = Math.Round(Index.NickMonthlyIncome * 0.15M, 2);
    public decimal SavingsCost = Math.Round(Index.NickMonthlyIncome * 0.10M, 2);

    public string GrossRemaining = string.Empty;
    public string DisplayGrossFraction = string.Empty;

    public List<ExpenseItem> StaticExpenses = new List<ExpenseItem>();

    protected async override void OnInitialized()
    {
        StaticExpenses = await GetStaticExpenseItems();
        GrossRemaining = Math.Round(((StaticExpenses.Select(x => x.Amount).Sum() / Index.NickMonthlyIncome) * 100), 2) + "%";
        DisplayGrossFraction = $"${Math.Round(StaticExpenses.Select(x => x.Amount).Sum(), 2)}/${Math.Round(Index.NickMonthlyIncome, 2)}";

        StateHasChanged();
    }

    private async Task<List<ExpenseItem>> GetStaticExpenseItems()
    {
        var result = await Http.GetStringAsync("http://ec2-18-117-185-201.us-east-2.compute.amazonaws.com:8080/nick");

        var items = JsonConvert.DeserializeObject<List<ExpenseItem>>(result);

        if (items == null)
        {
            return new List<ExpenseItem>();
        }

        return items;
    }

    private async Task<List<ExpenseItemVariable>> GetVariableExpenseItems()
    {
        var currentDate = DateTime.Now;

        var result = await Http.GetStringAsync($"http://ec2-18-117-185-201.us-east-2.compute.amazonaws.com:8080/nick/{currentDate.Year}-{currentDate.Month}");

        var items = JsonConvert.DeserializeObject<List<ExpenseItemVariable>>(result);

        if (items == null)
        {
            return new List<ExpenseItemVariable>();
        }

        return items;
    }
}
