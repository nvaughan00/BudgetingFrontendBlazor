@page "/nickcost"
@using Newtonsoft.Json
@inject HttpClient Http

<PageTitle>Nick's Costs</PageTitle>
<br /><br />
<ProgressBar Title="Total Expenses" Height="40px" Width="400" InitialValue="@GrossRemaining" DisplayString="@DisplayGross"></ProgressBar>
<br /><br />
<h4 style="text-align: center">Breakdown</h4>
<ul style="border: groove black 2px;">
    @for(var i = 0; i < DisplayList.Count; i++)
    {
        if(i == 0)
        {
            <li>@DisplayList[i].s &#8611 $@DisplayList[i].d</li>
        }
        else
        {
            <li style="border-top:dashed black 1px">@DisplayList[i].s &#8611 $@DisplayList[i].d</li>
        }    }
</ul>

<p>!@testItem.Description!</p>

@code {
    public static double UtilityCost = 150.00;
    public static double RentCost = 833.50;
    public static double CarPaymentCost = 467.73;
    public static double MuayThaiCost = 250.00;
    public static double GroceryCost = 400.00;
    public static double InsuranceCost = 180.83;
    public static double YoutubeCost = 30.00;
    public static double CrunchyrollCost = 9.99;
    public static double ParkingSpotCost = 65.00;
    public static double InvestmentCost = Math.Round(Index.NickMonthlyIncome * 0.15, 2);
    public static double SavingsCost = Math.Round(Index.NickMonthlyIncome * 0.10, 2);

    public static List<double> AllCosts = new List<double> { UtilityCost, RentCost, CarPaymentCost, MuayThaiCost, GroceryCost, InsuranceCost, YoutubeCost, CrunchyrollCost, ParkingSpotCost, InvestmentCost, SavingsCost };

    public static string GrossRemaining = Math.Round(((AllCosts.Sum() / Index.NickMonthlyIncome) * 100), 2) + "%";
    public static string DisplayGross = $"${Math.Round(AllCosts.Sum(), 2)}/${Math.Round(Index.NickMonthlyIncome, 2)} --> {GrossRemaining}";

    public static List<Index.KVPair> DisplayList = new List<Index.KVPair>
    {
        new Index.KVPair("Utility", UtilityCost),
        new Index.KVPair("Rent", RentCost),
        new Index.KVPair("CarPayment", CarPaymentCost),
        new Index.KVPair("MuayThai", MuayThaiCost),
        new Index.KVPair("Grocery", GroceryCost),
        new Index.KVPair("Insurance", InsuranceCost),
        new Index.KVPair("Youtube", YoutubeCost),
        new Index.KVPair("Crunchyroll", CrunchyrollCost),
        new Index.KVPair("ParkingSpot", ParkingSpotCost),
        new Index.KVPair("Investment", InvestmentCost),
        new Index.KVPair("Savings", SavingsCost)
    };

    public ExpenseItem testItem = new ExpenseItem();

    public class ExpenseItem
    {
        public string Description { get; set; } = string.Empty;
        public decimal Amount { get; set; }
        public int Id { get; set; }
    }

    protected async override void OnInitialized()
    {
        DisplayList = DisplayList.OrderByDescending(x => x.d).ToList();
        var result = await Http.GetStringAsync("http://ec2-18-117-185-201.us-east-2.compute.amazonaws.com:8080/");

        testItem.Description = result;

        Console.WriteLine("this is result: " + result);
        StateHasChanged();
    }
}
